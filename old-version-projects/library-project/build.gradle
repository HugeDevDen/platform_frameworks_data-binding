// Top-level build file where you can add configuration options common to all sub-projects/modules.
def checkoutRoot = "${rootProject.projectDir}/../../../../"
buildscript {
    def gradleVersion = System.getenv("OLD_GRADLE_VERSION")
    if (gradleVersion == null) {
        throw new IllegalArgumentException("must provide OLD_GRADLE_VERSION enviroment variable. e.g. OLD_GRADLE_VERSION=2.1.3")
    }
    def checkoutRoot = "${rootProject.projectDir}/../../../../"
    dependencies {
        classpath "com.android.tools.build:gradle:${gradleVersion}"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
    repositories {
        maven { url "$checkoutRoot/prebuilts/gradle-plugin" }
        maven { url "$checkoutRoot/prebuilts/tools/common/m2/repository" }
        maven { url "$checkoutRoot/prebuilts/tools/common/m2/internal" }
        maven { url "$checkoutRoot/prebuilts/maven_repo/android" }
        maven { url "$checkoutRoot/out/repo" }
        maven { url "$checkoutRoot/prebuilts/tools/common/offline-m2" }
        jcenter()
    }
}

ext.repo = "file://${rootProject.projectDir}/../tmp-maven-repo"
println "XTXT ${ext.repo}"
allprojects {
    repositories {
        maven { url "$checkoutRoot/prebuilts/gradle-plugin" }
        maven { url "$checkoutRoot/prebuilts/tools/common/m2/repository" }
        maven { url "$checkoutRoot/prebuilts/tools/common/m2/internal" }
        maven { url "$checkoutRoot/prebuilts/maven_repo/android" }
        maven { url "$checkoutRoot/out/repo" }
        maven { url "$checkoutRoot/prebuilts/tools/common/offline-m2" }
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
    delete rootProject.ext.repo
}